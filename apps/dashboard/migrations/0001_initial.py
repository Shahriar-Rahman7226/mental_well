# Generated by Django 5.1.3 on 2024-11-15 16:42

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user_profile', '0003_counselorprofilemodel_pay_per_session_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text="Unique id for a model's object", primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text="Is the model's object active")),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text="Creation date of the model's object")),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text="Updating date of the model's object")),
                ('introduction', models.TextField(blank=True, null=True)),
                ('mission_statement', models.TextField(blank=True, null=True)),
                ('vision_statement', models.TextField(blank=True, null=True)),
                ('history', models.TextField(blank=True, null=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('facebook', models.URLField(blank=True, null=True)),
                ('instagram', models.URLField(blank=True, null=True)),
                ('youtube', models.URLField(blank=True, null=True)),
                ('linkedin', models.URLField(blank=True, null=True)),
            ],
            options={
                'db_table': 'about_us',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BannerModel',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text="Unique id for a model's object", primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text="Is the model's object active")),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text="Creation date of the model's object")),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text="Updating date of the model's object")),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='banner/')),
            ],
            options={
                'db_table': 'banner_model',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FooterModel',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text="Unique id for a model's object", primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text="Is the model's object active")),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text="Creation date of the model's object")),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text="Updating date of the model's object")),
                ('image', models.ImageField(blank=True, null=True, upload_to='footer/')),
                ('details', models.TextField(blank=True, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('emergency_support', models.TextField(blank=True, null=True)),
                ('facebook', models.URLField(blank=True, null=True)),
                ('instagram', models.URLField(blank=True, null=True)),
                ('youtube', models.URLField(blank=True, null=True)),
                ('linkedin', models.URLField(blank=True, null=True)),
            ],
            options={
                'db_table': 'footer_models',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LegalDocument',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text="Unique id for a model's object", primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text="Is the model's object active")),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text="Creation date of the model's object")),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text="Updating date of the model's object")),
                ('details', models.TextField(blank=True, null=True)),
                ('version', models.CharField(blank=True, max_length=100, null=True)),
                ('licence_document', models.FileField(blank=True, null=True, upload_to='')),
            ],
            options={
                'db_table': 'legal_document',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MotivationModel',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text="Unique id for a model's object", primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text="Is the model's object active")),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text="Creation date of the model's object")),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text="Updating date of the model's object")),
                ('quote_text', models.TextField(blank=True, null=True)),
                ('author', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'motivation_model',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PrivacyPolicy',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text="Unique id for a model's object", primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text="Is the model's object active")),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text="Creation date of the model's object")),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text="Updating date of the model's object")),
                ('details', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'privacy_policy',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Resources',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text="Unique id for a model's object", primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text="Is the model's object active")),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text="Creation date of the model's object")),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text="Updating date of the model's object")),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('resource_file', models.FileField(blank=True, null=True, upload_to='')),
                ('resource_link', models.URLField(blank=True, null=True)),
            ],
            options={
                'db_table': 'resources',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Achievements',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text="Unique id for a model's object", primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text="Is the model's object active")),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text="Creation date of the model's object")),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text="Updating date of the model's object")),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('awarded_by', models.CharField(blank=True, max_length=100, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('counselor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='counselor_achievements', to='user_profile.counselorprofilemodel')),
            ],
            options={
                'db_table': 'achievements',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AppointmentRequest',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text="Unique id for a model's object", primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text="Is the model's object active")),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text="Creation date of the model's object")),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text="Updating date of the model's object")),
                ('booking_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('PENDING', 'pending'), ('CONFIRMED', 'confirmed'), ('DONE', 'done'), ('CANCELLED', 'cancelled'), ('REJECTED', 'rejected')], default='PENDING', max_length=100, null=True)),
                ('is_paid', models.BooleanField(blank=True, default=False, null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_request', to='user_profile.clientprofilemodel')),
                ('counselor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='counselor_request', to='user_profile.counselorprofilemodel')),
            ],
            options={
                'db_table': 'appointment_request',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text="Unique id for a model's object", primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text="Is the model's object active")),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text="Creation date of the model's object")),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text="Updating date of the model's object")),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='article/')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('author_name', models.CharField(blank=True, max_length=100, null=True)),
                ('article_file', models.FileField(blank=True, null=True, upload_to='')),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('PENDING', 'pending'), ('ACCEPTED', 'accepted'), ('REJECTED', 'rejected')], default='PENDING', max_length=100, null=True)),
                ('is_published', models.BooleanField(blank=True, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='author_article', to='user_profile.counselorprofilemodel')),
            ],
            options={
                'db_table': 'article',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ClientProgress',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text="Unique id for a model's object", primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text="Is the model's object active")),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text="Creation date of the model's object")),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text="Updating date of the model's object")),
                ('status', models.CharField(blank=True, choices=[('ASSIGNED', 'assigned'), ('ONGOING', 'ongoing'), ('COMPLETED', 'completed'), ('INCOMPLETE', 'incomplete')], default='ASSIGNED', max_length=100, null=True)),
                ('session_count', models.PositiveIntegerField(blank=True, null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_progress_client', to='user_profile.clientprofilemodel')),
                ('counselor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_progress_counselor', to='user_profile.counselorprofilemodel')),
            ],
            options={
                'db_table': 'client_progress',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ClientProgressDetails',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text="Unique id for a model's object", primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text="Is the model's object active")),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text="Creation date of the model's object")),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text="Updating date of the model's object")),
                ('details', models.TextField(blank=True, null=True)),
                ('appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='progress_appointment', to='dashboard.appointmentrequest')),
                ('overview', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='progress_details', to='user_profile.clientprofilemodel')),
            ],
            options={
                'db_table': 'client_progress_details',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CounselorSchedule',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text="Unique id for a model's object", primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text="Is the model's object active")),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text="Creation date of the model's object")),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text="Updating date of the model's object")),
                ('day', models.CharField(blank=True, choices=[('SUNDAY', 'sunday'), ('MONDAY', 'monday'), ('TUESDAY', 'tuesday'), ('WEDNESDAY', 'wednesday'), ('THURSDAY', 'thursday'), ('FRIDAY', 'friday'), ('SATURDAY', 'saturday')], max_length=100, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('is_available', models.BooleanField(blank=True, default=True, null=True)),
                ('is_booked', models.BooleanField(blank=True, default=False, null=True)),
                ('status', models.CharField(blank=True, choices=[('PENDING', 'pending'), ('CONFIRMED', 'confirmed'), ('DONE', 'done'), ('CANCELLED', 'cancelled'), ('REJECTED', 'rejected')], default='PENDING', max_length=100, null=True)),
                ('counselor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='counselor_schedule', to='user_profile.counselorprofilemodel')),
            ],
            options={
                'db_table': 'counselor_schedule',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='appointmentrequest',
            name='schedule',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appointment_schedule', to='dashboard.counselorschedule'),
        ),
        migrations.CreateModel(
            name='FAQModel',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text="Unique id for a model's object", primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text="Is the model's object active")),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text="Creation date of the model's object")),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text="Updating date of the model's object")),
                ('question', models.TextField(blank=True, null=True)),
                ('asnwer', models.TextField(blank=True, null=True)),
                ('is_published', models.BooleanField(blank=True, null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='faq_client', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'faq_model',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text="Unique id for a model's object", primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text="Is the model's object active")),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text="Creation date of the model's object")),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text="Updating date of the model's object")),
                ('due_amount', models.FloatField(blank=True, null=True)),
                ('paid_amount', models.FloatField(blank=True, null=True)),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_method', models.CharField(blank=True, choices=[('CASH', 'cash'), ('BKASH', 'bkash')], default='CASH', max_length=100, null=True)),
                ('appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appointment_schedule', to='dashboard.appointmentrequest')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_payment', to='user_profile.clientprofilemodel')),
                ('counselor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='counselor_payment', to='user_profile.counselorprofilemodel')),
            ],
            options={
                'db_table': 'payment',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text="Unique id for a model's object", primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text="Is the model's object active")),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text="Creation date of the model's object")),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text="Updating date of the model's object")),
                ('rating', models.PositiveIntegerField(blank=True, null=True)),
                ('review_text', models.TextField(blank=True, null=True)),
                ('client_name', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, choices=[('PENDING', 'pending'), ('ACCEPTED', 'accepted'), ('REJECTED', 'rejected')], default='PENDING', max_length=100, null=True)),
                ('is_published', models.BooleanField(blank=True, null=True)),
                ('appointment_count', models.PositiveIntegerField(blank=True, null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_review', to='user_profile.clientprofilemodel')),
                ('counselor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='counselor_review', to='user_profile.counselorprofilemodel')),
            ],
            options={
                'db_table': 'review',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VideoJournal',
            fields=[
                ('id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, help_text="Unique id for a model's object", primary_key=True, serialize=False, unique=True)),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text="Is the model's object active")),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text="Creation date of the model's object")),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text="Updating date of the model's object")),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='video_journal/')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('author_name', models.CharField(blank=True, max_length=100, null=True)),
                ('journal_link', models.URLField(blank=True, null=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('PENDING', 'pending'), ('ACCEPTED', 'accepted'), ('REJECTED', 'rejected')], default='PENDING', max_length=100, null=True)),
                ('is_published', models.BooleanField(blank=True, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='author_video_journal', to='user_profile.counselorprofilemodel')),
            ],
            options={
                'db_table': 'video_journal',
                'ordering': ['-created_at'],
            },
        ),
    ]
